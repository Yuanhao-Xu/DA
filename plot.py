import matplotlib.pyplot as plt

results = {'RS': [0.6266, 0.6449, 0.6554, 0.7167, 0.709, 0.8064, 0.7688, 0.7731, 0.7441, 0.752, 0.75, 0.7069, 0.7226, 0.7968, 0.7799, 0.7817, 0.8138, 0.7824, 0.7948, 0.8248, 0.8258, 0.8052, 0.8259, 0.8042, 0.8375, 0.8629, 0.8742, 0.8609, 0.8413, 0.8479, 0.8688, 0.8754, 0.8377, 0.8222, 0.8017, 0.7657, 0.7816, 0.7803, 0.7007, 0.7533, 0.7697, 0.7236, 0.7202, 0.7823, 0.7403, 0.7388, 0.7472, 0.7182, 0.7538, 0.7445, 0.7755, 0.835, 0.8936, 0.9261, 0.9531, 0.9379, 0.9593, 0.9487, 0.9397, 0.9389, 0.9372, 0.9196, 0.9456, 0.9521, 0.9244, 0.908, 0.9311, 0.9328, 0.9159, 0.8967],
           'LL4AL': [0.6266, 0.5097, 0.6201, 0.6662, 0.7788, 0.81, 0.7896, 0.7697, 0.7983, 0.7778, 0.7426, 0.7681, 0.7123, 0.7069, 0.7252, 0.759, 0.7683, 0.7684, 0.7129, 0.7421, 0.6565, 0.6537, 0.646, 0.6642, 0.6931, 0.7193, 0.6355, 0.6253, 0.6044, 0.6395, 0.8406, 0.8204, 0.908, 0.9118, 0.9277, 0.9172, 0.8737, 0.87, 0.8838, 0.8829, 0.8939, 0.897, 0.8896, 0.8143, 0.8245, 0.8215, 0.867, 0.8675, 0.861, 0.8291, 0.8505, 0.8314, 0.8415, 0.8542, 0.8794, 0.8678, 0.892, 0.8741, 0.9122, 0.8625, 0.8842, 0.8938, 0.8643, 0.8232, 0.876, 0.8411, 0.8327, 0.85, 0.8374, 0.8944],
           'LCMD': [0.6266, 0.5794, 0.6662, 0.6654, 0.6528, 0.6576, 0.6821, 0.7013, 0.7984, 0.8122, 0.8207, 0.8241, 0.8654, 0.8451, 0.8601, 0.8663, 0.8702, 0.8741, 0.8782, 0.8878, 0.8763, 0.8805, 0.862, 0.8478, 0.8397, 0.8544, 0.869, 0.8666, 0.8622, 0.8688, 0.8453, 0.8766, 0.8595, 0.8488, 0.8809, 0.9186, 0.9025, 0.9014, 0.9112, 0.9064, 0.9124, 0.889, 0.892, 0.8913, 0.889, 0.8954, 0.9047, 0.9117, 0.8951, 0.8996, 0.917, 0.9014, 0.8905, 0.9158, 0.8959, 0.8936, 0.9166, 0.9168, 0.899, 0.8737, 0.8867, 0.8719, 0.8857, 0.8825, 0.8906, 0.8857, 0.8867, 0.8748, 0.8726, 0.859],
           'MCD': [0.6266, 0.6426, 0.6293, 0.6164, 0.5316, 0.6838, 0.7, 0.7773, 0.8183, 0.7842, 0.8039, 0.7579, 0.7294, 0.8011, 0.7391, 0.6992, 0.7802, 0.8165, 0.807, 0.7914, 0.7764, 0.8155, 0.7943, 0.8109, 0.831, 0.851, 0.8834, 0.8938, 0.8766, 0.9203, 0.9376, 0.9246, 0.9074, 0.9342, 0.9367, 0.9157, 0.9192, 0.9406, 0.9124, 0.9335, 0.9131, 0.8989, 0.909, 0.894, 0.8274, 0.8688, 0.8753, 0.8794, 0.9152, 0.8879, 0.8949, 0.9217, 0.8983, 0.8995, 0.8912, 0.8948, 0.8818, 0.879, 0.9054, 0.9132, 0.9105, 0.9401, 0.9586, 0.9495, 0.9383, 0.9603, 0.9552, 0.9474, 0.9261, 0.94],
           'EGAL': [0.6266, 0.7263, 0.7394, 0.8595, 0.857, 0.8422, 0.878, 0.831, 0.8165, 0.886, 0.8865, 0.9109, 0.8972, 0.891, 0.8839, 0.884, 0.8833, 0.9085, 0.8842, 0.8857, 0.8985, 0.9089, 0.8783, 0.8854, 0.8728, 0.9062, 0.8414, 0.9077, 0.8855, 0.91, 0.9139, 0.8825, 0.9046, 0.9051, 0.8766, 0.8575, 0.8653, 0.8676, 0.9171, 0.913, 0.9508, 0.9566, 0.951, 0.9513, 0.927, 0.9409, 0.9304, 0.9134, 0.9314, 0.9174, 0.9123, 0.9129, 0.9265, 0.9369, 0.9284, 0.9278, 0.9023, 0.9348, 0.9181, 0.927, 0.9306, 0.9433, 0.9292, 0.9342, 0.9394, 0.9421, 0.9283, 0.935, 0.9445, 0.9325],
           'BayesianAL': [0.6266, 0.6435, 0.7002, 0.6269, 0.7626, 0.8181, 0.8546, 0.788, 0.8139, 0.8494, 0.8627, 0.8812, 0.8904, 0.9088, 0.9168, 0.8592, 0.8947, 0.9162, 0.8414, 0.8739, 0.8264, 0.8584, 0.8558, 0.8455, 0.9025, 0.8949, 0.8978, 0.9116, 0.9291, 0.9176, 0.907, 0.8944, 0.841, 0.8152, 0.8338, 0.8199, 0.8036, 0.9058, 0.9159, 0.9094, 0.9138, 0.9106, 0.9061, 0.9023, 0.9083, 0.925, 0.9127, 0.9223, 0.9155, 0.8637, 0.8648, 0.8987, 0.8988, 0.8916, 0.8873, 0.9064, 0.8679, 0.9064, 0.8918, 0.8766, 0.9071, 0.9228, 0.8817, 0.9187, 0.9319, 0.9264, 0.9188, 0.9302, 0.9048, 0.9074],
           'GSx': [0.6266, 0.6253, 0.5522, 0.4737, 0.4969, 0.5609, 0.5695, 0.6269, 0.751, 0.7353, 0.7437, 0.7533, 0.8642, 0.7753, 0.8401, 0.8812, 0.8805, 0.8343, 0.934, 0.9125, 0.9639, 0.9518, 0.9519, 0.9485, 0.9675, 0.9721, 0.9781, 0.9787, 0.9726, 0.9686, 0.9611, 0.9604, 0.9714, 0.9721, 0.969, 0.9576, 0.9553, 0.9617, 0.9572, 0.9578, 0.9622, 0.9562, 0.957, 0.962, 0.9595, 0.9616, 0.948, 0.9348, 0.9414, 0.9258, 0.9205, 0.9433, 0.9324, 0.9315, 0.9213, 0.9262, 0.9313, 0.9315, 0.9322, 0.9187, 0.9101, 0.9357, 0.9212, 0.9278, 0.8996, 0.9201, 0.9137, 0.9558, 0.9252, 0.8984],
           'GSy': [0.6266, 0.5423, 0.4882, 0.4378, 0.6281, 0.6132, 0.5699, 0.6061, 0.6004, 0.6322, 0.6647, 0.7295, 0.7341, 0.8049, 0.7999, 0.8182, 0.831, 0.8703, 0.8778, 0.8661, 0.9034, 0.8586, 0.8791, 0.8891, 0.8726, 0.87, 0.7646, 0.7962, 0.8307, 0.8418, 0.8717, 0.8502, 0.8022, 0.8322, 0.8597, 0.8025, 0.8123, 0.8154, 0.8107, 0.7933, 0.8178, 0.7718, 0.8209, 0.852, 0.8493, 0.8324, 0.8997, 0.8847, 0.8928, 0.8821, 0.8875, 0.934, 0.9022, 0.9511, 0.9352, 0.935, 0.9106, 0.9297, 0.9259, 0.9182, 0.9542, 0.9326, 0.9439, 0.9468, 0.9371, 0.9344, 0.9363, 0.9612, 0.9297, 0.9335],
           'GSi': [0.6266, 0.7019, 0.698, 0.6868, 0.729, 0.7677, 0.7543, 0.7387, 0.8104, 0.8876, 0.8107, 0.9194, 0.9259, 0.9452, 0.932, 0.9132, 0.9226, 0.901, 0.8965, 0.9044, 0.8976, 0.9064, 0.9032, 0.9109, 0.8896, 0.8867, 0.904, 0.8949, 0.8785, 0.8787, 0.9089, 0.9105, 0.8884, 0.8262, 0.8867, 0.9208, 0.9352, 0.924, 0.9316, 0.918, 0.9509, 0.9486, 0.9625, 0.9489, 0.9514, 0.9477, 0.9607, 0.9624, 0.9478, 0.9345, 0.9028, 0.9121, 0.8747, 0.9011, 0.9036, 0.9067, 0.916, 0.9061, 0.9052, 0.8948, 0.8741, 0.9059, 0.9032, 0.8973, 0.9206, 0.9094, 0.9036, 0.9294, 0.9303, 0.9335],
           'GSBAG': [0.6266, 0.5458, 0.7157, 0.7376, 0.6481, 0.6694, 0.736, 0.8283, 0.8569, 0.8497, 0.8521, 0.8584, 0.8896, 0.8747, 0.8503, 0.8093, 0.8666, 0.8688, 0.8545, 0.8973, 0.9224, 0.8969, 0.8886, 0.88, 0.8856, 0.8825, 0.8906, 0.8719, 0.8713, 0.9162, 0.8985, 0.8844, 0.9131, 0.9038, 0.9053, 0.9101, 0.8993, 0.8699, 0.8618, 0.8744, 0.8902, 0.8888, 0.8851, 0.9186, 0.9085, 0.9027, 0.9184, 0.9135, 0.9476, 0.9118, 0.9119, 0.9122, 0.9222, 0.924, 0.9338, 0.9281, 0.9317, 0.9443, 0.9314, 0.9313, 0.9061, 0.9165, 0.9223, 0.9195, 0.9214, 0.9124, 0.9037, 0.9086, 0.906, 0.9352]
           }



# 绘制R2分数随循环变化的曲线图
# 改善图像的清晰度
plt.figure(figsize=(14, 10))

for strategy, r2_scores in results.items():
    cycles = range(1, len(r2_scores) + 1)
    # 使用不同的线型和颜色，设置透明度
    plt.plot(cycles, r2_scores, label=strategy, marker='o', linestyle='-', linewidth=2, alpha=0.8)

# 设置图标题和轴标签
plt.title('R2 Scores Over Cycles for Different Strategies', fontsize=16)
plt.xlabel('Cycle', fontsize=14)
plt.ylabel('R2 Score', fontsize=14)

# 优化图例，放在图形外部
plt.legend(loc='center left', bbox_to_anchor=(1, 0.5), fontsize=12)
plt.grid(True)

# 增加背景网格线
plt.grid(which='both', linestyle='--', linewidth=0.5)

# 展示图像
plt.tight_layout()  # 自动调整子图参数，使图像更加美观
plt.show()