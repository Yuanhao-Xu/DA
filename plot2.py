import matplotlib.pyplot as plt
# 测试噪声0-20%
res_5f0n = {'RS': [0.5496, 0.6224, 0.637, 0.7536, 0.8395, 0.864, 0.8549, 0.8431, 0.8557, 0.8676, 0.858, 0.8516, 0.8638, 0.8772, 0.8803, 0.8888, 0.8717, 0.8848, 0.8899, 0.891, 0.8945, 0.9028, 0.9051, 0.9016, 0.9001, 0.9075, 0.9131, 0.9157, 0.9291, 0.932, 0.9429, 0.9456, 0.9492, 0.9468, 0.9457, 0.947, 0.9459, 0.9602, 0.9641, 0.958, 0.9643, 0.9703, 0.9679, 0.9682, 0.9626, 0.9721, 0.9708, 0.9764, 0.971, 0.9735, 0.9708, 0.9705, 0.9742, 0.9726, 0.9717, 0.97, 0.9713, 0.9714, 0.9763, 0.9761, 0.9749, 0.9729, 0.971, 0.9762, 0.9752, 0.9767, 0.9749, 0.9789, 0.982, 0.9807],
            'LL4AL': [0.5496, 0.4651, 0.5191, 0.6075, 0.6025, 0.6039, 0.7293, 0.7248, 0.7092, 0.7002, 0.7207, 0.7426, 0.7916, 0.8045, 0.8783, 0.8958, 0.8591, 0.8906, 0.904, 0.8882, 0.905, 0.905, 0.9108, 0.916, 0.9219, 0.9272, 0.9348, 0.9421, 0.9412, 0.9498, 0.9566, 0.9456, 0.9556, 0.9574, 0.956, 0.9569, 0.9653, 0.9653, 0.9624, 0.9622, 0.9538, 0.9601, 0.9549, 0.9654, 0.9628, 0.9589, 0.9647, 0.9648, 0.9432, 0.9684, 0.9644, 0.9751, 0.973, 0.9776, 0.9724, 0.9738, 0.9741, 0.9772, 0.9739, 0.9737, 0.979, 0.9803, 0.9773, 0.978, 0.9778, 0.9779, 0.9768, 0.9742, 0.9806, 0.975],
            'LCMD': [0.5496, 0.6646, 0.7719, 0.8566, 0.863, 0.8633, 0.866, 0.8933, 0.896, 0.9193, 0.9135, 0.9134, 0.9126, 0.9139, 0.9018, 0.8974, 0.9074, 0.9026, 0.9124, 0.9288, 0.9214, 0.9412, 0.9344, 0.9413, 0.9303, 0.9364, 0.9393, 0.9349, 0.9354, 0.9323, 0.9374, 0.9289, 0.9426, 0.9477, 0.9456, 0.9453, 0.9491, 0.9504, 0.9505, 0.9518, 0.9508, 0.9581, 0.9605, 0.9644, 0.9652, 0.9662, 0.9656, 0.9717, 0.9702, 0.9746, 0.9742, 0.9768, 0.9811, 0.9879, 0.9849, 0.9865, 0.9859, 0.9872, 0.9838, 0.9862, 0.9854, 0.9812, 0.9858, 0.9781, 0.9872, 0.9868, 0.9818, 0.987, 0.9866, 0.9889],
            'MCD': [0.5496, 0.5559, 0.6459, 0.6696, 0.7354, 0.7345, 0.7339, 0.7601, 0.7625, 0.8077, 0.8125, 0.8401, 0.8673, 0.8931, 0.9022, 0.8937, 0.9134, 0.9181, 0.9233, 0.8971, 0.906, 0.9292, 0.9188, 0.9102, 0.9331, 0.9268, 0.9309, 0.942, 0.9312, 0.9356, 0.9362, 0.9334, 0.9251, 0.9215, 0.9289, 0.927, 0.932, 0.9447, 0.9449, 0.9555, 0.9455, 0.95, 0.9565, 0.9614, 0.9635, 0.9605, 0.968, 0.9628, 0.9675, 0.9681, 0.9711, 0.9685, 0.9722, 0.9694, 0.9662, 0.9689, 0.972, 0.9724, 0.9735, 0.9715, 0.9696, 0.9685, 0.9704, 0.972, 0.9754, 0.9726, 0.9698, 0.9703, 0.9737, 0.9713],
            'EGAL': [0.5496, 0.7293, 0.7396, 0.7528, 0.7721, 0.786, 0.834, 0.8235, 0.7874, 0.7773, 0.8529, 0.8428, 0.8468, 0.8729, 0.8952, 0.8861, 0.9002, 0.8908, 0.8944, 0.9069, 0.9194, 0.9445, 0.9393, 0.9282, 0.926, 0.9325, 0.9586, 0.9598, 0.9603, 0.9629, 0.9614, 0.9643, 0.9666, 0.9704, 0.966, 0.9639, 0.9676, 0.97, 0.9742, 0.9678, 0.97, 0.9742, 0.9732, 0.9755, 0.975, 0.9785, 0.9745, 0.9759, 0.9736, 0.9737, 0.9773, 0.9786, 0.976, 0.9761, 0.9758, 0.9762, 0.9812, 0.9833, 0.9847, 0.9846, 0.9856, 0.9848, 0.9839, 0.986, 0.9863, 0.9884, 0.9855, 0.9838, 0.9869, 0.9886],
            'BayesianAL': [0.5496, 0.4569, 0.5705, 0.6449, 0.6563, 0.6707, 0.7005, 0.7119, 0.7377, 0.7274, 0.7918, 0.8263, 0.9, 0.8974, 0.92, 0.9318, 0.936, 0.9305, 0.9313, 0.925, 0.9235, 0.9318, 0.9368, 0.9457, 0.9492, 0.9441, 0.9387, 0.9446, 0.9472, 0.9515, 0.945, 0.9546, 0.9537, 0.9635, 0.9658, 0.9732, 0.9744, 0.9655, 0.9741, 0.9795, 0.9788, 0.9796, 0.975, 0.9774, 0.9778, 0.9766, 0.9768, 0.9801, 0.9828, 0.9839, 0.9813, 0.983, 0.9849, 0.9847, 0.9888, 0.9878, 0.9858, 0.989, 0.9888, 0.9867, 0.9862, 0.9885, 0.9868, 0.9883, 0.9873, 0.9854, 0.9825, 0.9827, 0.9869, 0.984]}
# res_5f5n =
# res_5f10n =
# res_5f15n =
res_5f20n = {'RS': [0.2797, 0.1959, 0.2496, 0.4367, 0.6529, 0.6548, 0.651, 0.6488, 0.6262, 0.6522, 0.6419, 0.6741, 0.6585, 0.6789, 0.6586, 0.6823, 0.6799, 0.6507, 0.6024, 0.5773, 0.6059, 0.6279, 0.621, 0.6451, 0.6572, 0.6946, 0.687, 0.6685, 0.6923, 0.7076, 0.7109, 0.7285, 0.7312, 0.7562, 0.7835, 0.8015, 0.8227, 0.801, 0.8096, 0.8322, 0.8211, 0.8293, 0.8402, 0.8318, 0.8432, 0.8613, 0.8602, 0.8512, 0.8407, 0.8543, 0.8678, 0.8609, 0.8605, 0.8509, 0.8391, 0.8454, 0.8296, 0.8242, 0.8309, 0.8114, 0.7994, 0.8271, 0.8215, 0.7994, 0.7923, 0.7918, 0.808, 0.8077, 0.8171, 0.8265],
             'LL4AL': [0.2797, 0.0961, 0.1301, 0.324, 0.3914, 0.4014, 0.3336, 0.3908, 0.5417, 0.6375, 0.6418, 0.6409, 0.7018, 0.7613, 0.7807, 0.8127, 0.8259, 0.8214, 0.8281, 0.8404, 0.8324, 0.8208, 0.8137, 0.8071, 0.758, 0.7264, 0.7515, 0.7597, 0.7767, 0.7718, 0.7765, 0.775, 0.7782, 0.7969, 0.7902, 0.7901, 0.7899, 0.8133, 0.7829, 0.8061, 0.7899, 0.7856, 0.7699, 0.7707, 0.7951, 0.7615, 0.768, 0.7867, 0.8054, 0.8187, 0.813, 0.8169, 0.7859, 0.7827, 0.7971, 0.8338, 0.8451, 0.8532, 0.8914, 0.8788, 0.8635, 0.8348, 0.8471, 0.8577, 0.7936, 0.8529, 0.8393, 0.852, 0.8462, 0.8554],
             'LCMD': [0.2797, 0.5629, 0.6226, 0.7057, 0.7138, 0.7465, 0.7408, 0.7295, 0.7702, 0.7363, 0.7521, 0.7474, 0.7644, 0.7743, 0.7744, 0.7526, 0.7696, 0.7752, 0.7842, 0.795, 0.783, 0.8057, 0.8196, 0.8157, 0.8276, 0.8391, 0.8515, 0.8571, 0.8493, 0.8483, 0.8483, 0.8438, 0.8506, 0.8406, 0.8356, 0.8258, 0.8065, 0.8326, 0.8137, 0.8376, 0.8488, 0.8326, 0.8207, 0.8468, 0.8128, 0.8386, 0.8127, 0.8157, 0.8087, 0.8097, 0.7972, 0.7994, 0.7719, 0.7449, 0.7563, 0.7544, 0.7429, 0.7279, 0.7401, 0.722, 0.7573, 0.7852, 0.7595, 0.7678, 0.7584, 0.7819, 0.768, 0.79, 0.7408, 0.7471],
             'MCD': [0.2797, 0.4388, 0.4293, 0.5374, 0.5159, 0.5305, 0.5721, 0.5818, 0.611, 0.6254, 0.5909, 0.6138, 0.6763, 0.6989, 0.7015, 0.738, 0.7491, 0.7523, 0.7688, 0.7593, 0.7749, 0.7238, 0.7289, 0.7131, 0.6952, 0.6924, 0.6892, 0.6994, 0.7123, 0.725, 0.751, 0.7243, 0.7533, 0.7901, 0.7999, 0.8098, 0.8096, 0.8073, 0.7925, 0.8, 0.7723, 0.7963, 0.8022, 0.785, 0.7604, 0.7748, 0.7826, 0.7697, 0.7845, 0.78, 0.7849, 0.7958, 0.778, 0.7645, 0.783, 0.7733, 0.7778, 0.7969, 0.8017, 0.8067, 0.7962, 0.8031, 0.8172, 0.8286, 0.8377, 0.8085, 0.8084, 0.8087, 0.7798, 0.8026],
             'EGAL': [0.2797, 0.2606, 0.2902, 0.4626, 0.3398, 0.3279, 0.3791, 0.4494, 0.5365, 0.5986, 0.6692, 0.711, 0.6999, 0.7301, 0.7161, 0.6911, 0.6699, 0.7021, 0.6624, 0.6723, 0.6949, 0.6953, 0.6894, 0.6585, 0.6824, 0.6858, 0.7343, 0.7488, 0.7482, 0.7562, 0.732, 0.7459, 0.7511, 0.7306, 0.7642, 0.721, 0.6998, 0.7379, 0.7508, 0.7368, 0.7279, 0.7543, 0.7546, 0.7656, 0.738, 0.748, 0.7456, 0.7238, 0.7184, 0.7251, 0.7202, 0.713, 0.754, 0.7512, 0.7764, 0.7713, 0.7652, 0.7769, 0.7566, 0.7585, 0.7674, 0.7394, 0.7351, 0.7589, 0.7515, 0.7544, 0.7273, 0.7546, 0.7735, 0.7706],
             'BayesianAL': [0.2797, 0.1932, 0.2343, 0.3206, 0.2995, 0.2668, 0.2893, 0.372, 0.47, 0.5935, 0.6147, 0.5952, 0.5719, 0.6439, 0.6242, 0.6465, 0.6537, 0.7163, 0.8116, 0.8492, 0.8372, 0.829, 0.8364, 0.8445, 0.8316, 0.8327, 0.8489, 0.8455, 0.8727, 0.8606, 0.8616, 0.8666, 0.8597, 0.8616, 0.8547, 0.8447, 0.8618, 0.8587, 0.8397, 0.8507, 0.8694, 0.8525, 0.8398, 0.8736, 0.8604, 0.8674, 0.8568, 0.8762, 0.8764, 0.8855, 0.8844, 0.8703, 0.8627, 0.8763, 0.8558, 0.88, 0.902, 0.8881, 0.8772, 0.8313, 0.8188, 0.8017, 0.8215, 0.8106, 0.8264, 0.7963, 0.8297, 0.8322, 0.8238, 0.8062]}


# 绘制R2分数随循环变化的曲线图
# 改善图像的清晰度
plt.figure(figsize=(14, 10))

for strategy, r2_scores in res_5f20n.items():
    cycles = range(1, len(r2_scores) + 1)
    # 使用不同的线型和颜色，设置透明度
    plt.plot(cycles, r2_scores, label=strategy, marker='o', linestyle='-', linewidth=2, alpha=0.8)

# 设置图标题和轴标签
plt.title('R2 Scores Over Cycles for Different Strategies', fontsize=16)
plt.xlabel('Cycle', fontsize=14)
plt.ylabel('R2 Score', fontsize=14)

# 优化图例，放在图形外部
plt.legend(loc='center left', bbox_to_anchor=(1, 0.5), fontsize=12)
plt.grid(True)

# 增加背景网格线
plt.grid(which='both', linestyle='--', linewidth=0.5)

# 展示图像
plt.tight_layout()  # 自动调整子图参数，使图像更加美观
plt.show()